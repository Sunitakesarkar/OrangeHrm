<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-SM0MVNU" failures="0" tests="3" name="Default test" time="0.067" errors="0" timestamp="2023-03-17T10:51:37 IST">
  <testcase classname="Testpackage.BaseClass" name="@BeforeTest beforesuite" time="-1.679030497652E9">
    <failure type="org.testng.TestNGException" message="
Method beforesuite requires 2 parameters but 1 were supplied in the BeforeTest annotation.">
      <![CDATA[org.testng.TestNGException: 
Method beforesuite requires 2 parameters but 1 were supplied in the BeforeTest annotation.
at org.testng.internal.Parameters.checkParameterTypes(Parameters.java:444)
at org.testng.internal.Parameters.createParametersForMethod(Parameters.java:350)
at org.testng.internal.Parameters.createParameters(Parameters.java:684)
at org.testng.internal.Parameters.createConfigurationParameters(Parameters.java:166)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:277)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:644)
at org.testng.TestRunner.beforeRun(TestRunner.java:633)
at org.testng.TestRunner.run(TestRunner.java:595)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest beforesuite -->
  <testcase classname="Testpackage.LoginTestCases" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="Testpackage.BaseClass" name="@AfterMethod aftermethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Testpackage.LoginTestCases" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="Testpackage.BaseClass" name="@AfterMethod aftermethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Testpackage.LoginTestCases" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="Testpackage.BaseClass" name="@AfterMethod aftermethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod aftermethod -->
  <testcase classname="Testpackage.BaseClass" name="@AfterTest afterTest" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Testpackage.LoginTestCases" name="VerifyLoginFunctionalityWithCorrectData" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyLoginFunctionalityWithCorrectData -->
  <testcase classname="Testpackage.LoginTestCases" name="VerifyLoginFunctionalityWithInCorrectData" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyLoginFunctionalityWithInCorrectData -->
  <testcase classname="Testpackage.LoginTestCases" name="VerifyLoginFunctionalityWithBlnkData" time="0.0">
    <skipped/>
  </testcase> <!-- VerifyLoginFunctionalityWithBlnkData -->
</testsuite> <!-- Default test -->
